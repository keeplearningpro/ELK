input {
  file {
    path => "C:/ELASTIC/Monitoring_Data/IRS2/jIRS.0702_1.log"
    start_position => "beginning"
	codec => multiline {
		pattern => "^%{TIMESTAMP_ISO8601} "
		negate => true
		what => previous
	  }
	}
}
filter {
	grok {
		match => [ "message" , "%{TIMESTAMP_ISO8601:Timestamp} %{GREEDYDATA:message}" ]
		overwrite => ["message"]
		}
	grok {
		 match => [ "message" ,	"%{LOGLEVEL:Severity} %{GREEDYDATA}" ]
		 }
	if [Severity] == "DEBUG" {
		grok { 
			match => [ "message" , "(.*?:) %{QS:Threadnumber} (.*?]) %{LOGLEVEL} (.*?-\s+)(?<CRID>.*?\S) %{GREEDYDATA:DebugMessage}" ]
			}
		}
	elseif [Severity] == "WARN" {
		grok {
			match => [ "message" , "(.*?]) %{LOGLEVEL}  (?<Outcome>.?[^:]*)(.*?\S) %{NUMBER:ActualDBLag} (.*?:) %{GREEDYDATA:District}" ]
			match => [ "message" , "(.*?:) %{QS:Threadnumber} (.*?]) %{LOGLEVEL}  (?<Outcome>.?[^:]*)(.*?-) (?<Errorcode>.*?\S) (.*?) %{NUMBER:DBLagThreshold} (.*?) %{NUMBER:ActualDBLag} (.*?\S)+ %{GREEDYDATA:District}" ]
			match => [ "message" , "(.*?:) %{QS:Threadnumber} (.*?]) %{LOGLEVEL}  (?<Outcome>.?[^:]*)(.?[^:]*)(.?[^\\S\\s])(.?[/to]) (?<District>.?[^\\S])(.?[^\\S\\s])(.?*\b) %{GREEDYDATA:CRID}" ]
			match => [ "message" , "(.*?:) %{QS:Threadnumber} (.*?]) %{LOGLEVEL}  (?<Outcome>.?[^:]*)(.?[^:]*)(.?[^\\S\\s]) %{GREEDYDATA:CRID}" ]
			}
		}
	elseif [Severity] == "ERROR" {
		grok {
			match => [ "message" , "(.*?:) %{QS:Threadnumber} (.*?]) %{LOGLEVEL} (?<Outcome>.?[^:]*)(.*?\S)(?<Errormessage>.*?:) (?<Errorcode>.?[^\\n]*)%{GREEDYDATA}" ]
			match => [ "message" , "(.*?:) %{QS:Threadnumber} (.*?]) %{LOGLEVEL} (?<Outcome>.?[^:]*)(.*?-) %{GREEDYDATA:Errorcode}" ]
			}
		}
	 date {
		match => [ "Timestamp" , "YYYY-MM-dd HH:mm:ss,SSS" ]
	}
}	

output {
   elasticsearch {
     hosts => "localhost:9200"
     index => "idx_ir2_my_expt_0103_02"
	 }
stdout {}
}